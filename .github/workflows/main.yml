# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Tests

on:
  push:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/capstone2
      STRAVA_CLIENT_ID: ${{ secrets.STRAVA_CLIENT_ID }}
      STRAVA_CLIENT_SECRET: ${{ secrets.STRAVA_CLIENT_SECRET }}
      STRAVA_SUBSCRIBTION_SECRET: ${{ secrets.STRAVA_SUBSCRIBTION_SECRET }}
      API_BOX_KEY: ${{ secrets.API_BOX_KEY }}
      TOP_MEDIAI_KEY: ${{ secrets.TOP_MEDIAI_KEY }}
      TOKEN_KEY: ${{ secrets.TOKEN_KEY }}

    services:
      postgress:
        image: postgres:16.1-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: capstone2
        ports:
          - 5432:5432
    strategy:
      matrix:
        node-version: [22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies server
        run: npm ci -w=server

      - name: Install dependencies client
        run: npm ci -w=client

      - name: Lint server
        run: npm run lint -w=server

      - name: Lint client
        run: npm run lint -w=client

      - name: Run server database migrations
        run: npm run migrate:latest -w=server

      - name: Test server
        run: npm run test -w=server

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium

      - name: Start server for E2E tests
        run: npm run dev -w=server &

      - name: Start frontend
        run: npm run dev -w=client &

      - name: Wait for server to startup
        uses: Jtalk/url-health-check-action@v4
        with:
          max-attempts: 5
          retry-delay: 5s
          url: http://localhost:3000/api/health

      - name: Test client E2E
        run: npm run test:e2e -w=client
